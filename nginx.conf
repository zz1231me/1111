# nginx 설정 파일 (C:\nginx\conf\nginx.conf)
# Express API 서버와 연동하여 클라이언트 + API 서빙

# 워커 프로세스 수 (CPU 코어 수와 맞추는 것이 일반적)
worker_processes  1;

# 이벤트 블록 - 연결 처리 설정
events {
    worker_connections  1024;  # 워커당 최대 동시 연결 수
}

# HTTP 블록 - 웹서버 메인 설정
http {
    # MIME 타입 설정 포함
    include       mime.types;
    default_type  application/octet-stream;
    
    # 파일 전송 최적화
    sendfile        on;
    keepalive_timeout  65;
    
    # 업로드 파일 크기 제한 (100MB까지 허용)
    client_max_body_size 100m;
    
    # ========================================
    # 성능 최적화 옵션 (http 블록 레벨)
    # ========================================
    
    # gzip 압축 활성화 (대역폭 절약)
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # 메인 서버 블록
    server {
        # 80포트에서 수신
        listen       80;
        server_name  localhost;
        
        # ========================================
        # 🔧 중요: 업로드 파일 먼저 처리 (우선순위 높음)
        # ========================================
        location /uploads/ {
            alias C:/jamtori/server/uploads/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
        
        # ========================================
        # API 프록시 (Express 서버로 전달)
        # ========================================
        location /api/ {
            # Express API 서버(4000포트)로 프록시
            proxy_pass http://127.0.0.1:4000/api/;
            
            # 프록시 헤더 설정 (클라이언트 정보 전달)
            proxy_set_header Host $host;                    # 호스트명 전달
            proxy_set_header X-Real-IP $remote_addr;        # 실제 클라이언트 IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 프록시 체인 IP
            proxy_set_header X-Forwarded-Proto $scheme;     # HTTP/HTTPS 프로토콜
        }
        
        # ========================================
        # 🔧 수정: 클라이언트 정적 파일만 캐싱 (uploads 제외)
        # ========================================
        location ~* ^(?!/uploads/).*\.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root   C:/jamtori/client/dist;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # ========================================
        # 클라이언트 정적 파일 서빙 (React 앱)
        # ========================================
        location / {
            root   C:/jamtori/client/dist;
            index  index.html index.htm;
            
            # SPA(Single Page Application) 라우팅 지원
            # 존재하지 않는 경로는 모두 index.html로 리다이렉트
            try_files $uri $uri/ /index.html;
        }
        
        # ========================================
        # 에러 페이지 설정
        # ========================================
        # 서버 에러 시 표시할 페이지
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;  # C:\nginx\html\50x.html 파일 사용
        }
    } # ✅ server 블록 종료
} # ✅ http 블록 종료

# ========================================
# 🔧 수정 사항 설명
# ========================================
#
# 문제:
# - 정적 파일 캐싱 설정이 /uploads/ 경로의 이미지도 client/dist에서 찾음
# - nginx location 우선순위 때문에 확장자 기반 설정이 먼저 적용됨
#
# 해결:
# 1. /uploads/ location을 맨 위로 이동 (우선순위 높음)
# 2. 정적 파일 캐싱에서 /uploads/ 경로 제외 (정규식 사용)
#
# 동작 흐름:
# - /uploads/images/test.jpg → uploads location (서버 파일)
# - /assets/index.js → 정적 파일 캐싱 (클라이언트 파일)
# - /api/* → Express 프록시
# - / → React 앱
#
# ========================================
